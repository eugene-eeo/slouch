#!/bin/bash

### Hookable

__slouch_fzf() {
    eval "fzf $SLOUCH_FZF_ARGS $(__slouch_fzf_get_args)"
}


__slouch_term() {
    st -t 'slouch' -a -g "80x20+570+300" -e "$0" "$@"
}


__slouch_pdetach() {
    exec setsid "$@"
}


__slouch_window_ids() {
    IFS=', '
    for wid in $(xprop -root | grep '^_NET_CLIENT_LIST(WINDOW)' | cut -d ' ' -f5-); do
        name=$(xwininfo -id "$wid" -wm | grep '^xwininfo:' | cut -d ' ' -f5-)
        name="${name:1:-1}"
        [ "$name" != 'slouch' ] && echo -e "$wid\t$name"
    done
}

__slouch_focus() {
    herbstclient jumpto "$1"
    herbstclient raise "$1"
}

__slouch_freedesktop_entries() {
    files=$(find /usr/share/applications/ -maxdepth 1 -type f -name '*.desktop' | sort)
    sum=$(echo "$files" | sha1sum | cut -d ' ' -f1)
    tmp="/tmp/slouch.drun.$sum"
    if [ -e "$tmp" ]; then
        cat "$tmp"
        exit
    fi
    for file in $files; do
        name=''
        path=''
        term=''
        exec=''
        hide=''
        while IFS= read -r line; do
            case "$line" in
                Name=*) [ ! "$name" ] && name=$(echo "$line" | cut -d '=' -f2-) ;;
                Path=*) [ ! "$path" ] && path=$(echo "$line" | cut -d '=' -f2-) ;;
                Exec=*) [ ! "$exec" ] && exec=$(echo "$line" | cut -d '=' -f2- | grep -v '%[UuFf]') ;;
                Terminal=true) term='y' ;;
                Type=Link)              ;&
                Type=Directory)         ;&
                NoDisplay=true)         ;&
                NotShowIn=*)   hide='y'; break ;;
            esac
        done < "$file"
        [ ! "$hide" ] && [ "$name" ] && [ "$exec" ] \
            && printf '%s\t%s\t%s\t%s\n' "$term" "$exec" "$path" "$name"
    done | tee "$tmp"
}

__slouch_drun() {
    if [ "$1" ]; then
        __slouch_pdetach st -e "$2"
    else
        __slouch_pdetach "$2"
    fi
}

# shellcheck source=/dev/null
. ~/.config/slouch/hooks

### Internal

__slouch_fzf_get_args() {
    opts=""
    for arg in "${FZF_OPTIONS[@]}"; do
      arg="${arg//\\/\\\\}"
      arg="${arg//\"/\\\"}"
      arg="${arg//\`/\\\`}"
      arg="${arg//$/\\$}"
      opts="$opts \"$arg\""
    done
    echo "$opts"
}


# shellcheck disable=2155
__slouch_pipe() {
    local in=$(mktemp -u)
    local out=$(mktemp -u)
    local status=$(mktemp -u)

    mkfifo "$in"
    mkfifo "$out"
    mkfifo "$status"
    __slouch_term _pipe "$in" "$out" "$status" "${FZF_OPTIONS[@]}" 2> /dev/null &
    cat > "$in" &
    cat "$out"
    code=$(cat "$status")
    rm "$in"
    rm "$out"
    rm "$status"
    exit "${code:-1}"
}

usage="usage:
    slouch -h | --help
    slouch <mode> -- [FZF OPTIONS]

    mode is one of:
        pipe:    use slouch as a popup fzf
        run:     run programs on \$PATH
        drun:    run freedesktop entries
        file:    open files in ~
        window:  switch between windows"

__slouch_help() {
    echo "$usage"
    exit "$1"
}


FZF_OPTIONS=()
mode=""

while [[ $# -gt 0 ]]; do
    arg="$1"
    shift
    case "$arg" in
        _pipe)
            in="$1";  shift
            out="$1"; shift
            status="$1"; shift
            FZF_OPTIONS=("${@}")
            __slouch_fzf > "$out" < "$in"
            echo "$?" > "$status"
            exit
            ;;
        pipe|run|drun|file|window)
            if [ -z "$mode" ]; then
                mode="$arg"
            else
                __slouch_help 1
            fi
            ;;
        --)
            FZF_OPTIONS=("$@")
            break
            ;;
        --help|-h) __slouch_help 0 ;;
        *)         __slouch_help 1 ;;
    esac
done

case "$mode" in
    pipe) __slouch_pipe ;;
    run)
        # readarray -d ':' -t path_array <<< "$PATH"
        # shellcheck disable=2086
        IFS=':'
        choice=$(find $PATH -type f,l -executable -printf '%f\n' \
            | grep -v '^\[$' \
            | sort -u \
            | "$0" pipe -- --prompt="run: " "${FZF_OPTIONS[@]}") && __slouch_pdetach "$choice"
        ;;
    drun)
        if choice=$(__slouch_freedesktop_entries | "$0" pipe -- --prompt="drun: " "${FZF_OPTIONS[@]}" -d'\t' --with-nth=4); then
            term=$(echo "$choice" | cut -d$'\t' -f1)
            exec=$(echo "$choice" | cut -d$'\t' -f2)
            path=$(echo "$choice" | cut -d$'\t' -f3)
            (
                [ -z "$path" ] && (cd "$path" || exit)
                __slouch_drun "$term" "$exec"
            )
        fi
        ;;
    file)
        choice=$(find ~ -name '.*' -prune -o -print | sed "s|^$HOME|~|" | "$0" pipe -- --prompt="file: " "${FZF_OPTIONS[@]}") \
            && __slouch_pdetach xdg-open "$HOME${choice:1}"
        ;;
    window)
        wid=$(__slouch_window_ids | "$0" pipe -- --prompt="window: " "${FZF_OPTIONS[@]}" -d'\t' --with-nth=2) \
            && __slouch_focus "$(echo "$wid" | cut -d$'\t' -f1)"
        ;;
    *) __slouch_help 1 ;;
esac
